{"version":3,"file":"app~7bd12dde.bundle.js","mappings":";oYACA,gnGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAEA,IAAOC,EAAsDC,EAAAA,EAAAA,cAAvCC,EAAuCD,EAAAA,EAAAA,iBAArBE,EAAqBF,EAAAA,EAAAA,kBAEvDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACxDI,QAAO,SAACC,GACNA,EAASC,kBAAkBL,EAAmB,CAACM,QAAS,MAC1D,IA2BF,QAxB8B,CACtBC,cAAa,SAACC,GAAI,oGACjBA,EAAI,CAAF,gEAGOP,EAAS,uCAAEQ,IAAIT,EAAmBQ,IAAE,0CAJ5B,EAKxB,EACME,kBAAiB,WAAG,iHACVT,EAAS,uCAAEU,OAAOX,IAAiB,0CADzB,EAE1B,EACMY,cAAa,SAACC,GAAY,oGACzBA,EAAWC,eAAe,MAAO,CAAF,gEAGtBb,EAAS,uCAAEc,IAAIf,EAAmBa,IAAU,0CAJ5B,EAKhC,EACMG,iBAAgB,SAACR,GAAI,iHACXP,EAAS,8CAASD,EAAmBQ,IAAE,0CAD5B,EAE3B,EACMS,kBAAiB,SAACC,GAAO,sIAE/B,gDCzBF,QALqB,CACnBC,KAAM,GAAF,OAAKrB,EAAAA,EAAAA,SAAe,QACxBsB,OAAQ,SAACZ,GAAE,gBAAQV,EAAAA,EAAAA,SAAe,kBAAUU,EAAE,sPCHhD,gnGAAAZ,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,0lBAAAA,EAAA,EAAAA,EAAA,SAAAA,IAAA,SAAAA,GAAA,sYAiBA,QAfmB,yBAFnB,4FAEmB,SAFnB,QAQG,EANgB,EAYhB,OAdH,EAEmB,OAFnB,EAEmB,uCACjB,sGACyByB,MAAMC,EAAAA,MAAkB,OAAjC,OAARC,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBAEXA,EAAaC,aAAW,2CAChC,qFAED,WAAyBlB,GAAE,yFACFa,MAAMC,EAAAA,OAAoBd,IAAI,OAAvC,OAARe,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaZ,YAAU,2CAC/B,+CAdH,6DAcG,EAZgB,mCCQnB,QAXe,CACbc,SAAU,uCACVC,eAAgB,oDAChBC,iBAAkB,QAClBC,YAAY,IAAIC,MAAOC,cACvBnC,cAAe,gCACfE,iBAAkB,EAClBC,kBAAmB,yECEfiC,gBAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQC,SAASC,cAAc,oBAC/BC,OAAQF,SAASC,cAAc,qBAC/BE,QAASH,SAASC,cAAc,mBAGlCG,OAAOC,iBAAiB,cAAc,WACpCR,EAAIS,YACN,IAEAF,OAAOC,iBAAiB,QAAQ,WAC9BR,EAAIS,cACJC,EAAAA,EAAAA,IACF","sources":["webpack://submission22/./src/scripts/data/favorite-resto-idb.js","webpack://submission22/./src/scripts/globals/api-endpoint.js","webpack://submission22/./src/scripts/data/restodb-source.js","webpack://submission22/./src/scripts/globals/config.js","webpack://submission22/./src/scripts/index.js"],"sourcesContent":["import {openDB} from 'idb';\r\nimport CONFIG from '../globals/config';\r\n\r\nconst {DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME} = CONFIG;\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n  upgrade(database) {\r\n    database.createObjectStore(OBJECT_STORE_NAME, {keyPath: 'id'});\r\n  },\r\n});\r\n\r\nconst FavoriteRestaurantIdb = {\r\n  async getRestaurant(id) {\r\n    if (!id) {\r\n      return;\r\n    }\r\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\r\n  },\r\n  async getAllRestaurants() {\r\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n  },\r\n  async putRestaurant(restaurant) {\r\n    if (!restaurant.hasOwnProperty('id')) {\r\n      return;\r\n    }\r\n    return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\r\n  },\r\n  async deleteRestaurant(id) {\r\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\r\n  },\r\n  async searchRestaurants(query) {\r\n\r\n  },\r\n};\r\n\r\nexport default FavoriteRestaurantIdb;\r\n","import CONFIG from './config';\r\n\r\nconst API_ENDPOINT = {\r\n  LIST: `${CONFIG.BASE_URL}list`,\r\n  DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\r\n};\r\n\r\nexport default API_ENDPOINT;\r\n","/* eslint-disable require-jsdoc */\r\nimport API_ENDPOINT from '../globals/api-endpoint';\r\n\r\nclass RestoDbSource {\r\n  static async restoList() {\r\n    const response = await fetch(API_ENDPOINT.LIST);\r\n    const responseJson = await response.json();\r\n    // console.log(responseJson);\r\n    return responseJson.restaurants;\r\n  }\r\n\r\n  static async detailResto(id) {\r\n    const response = await fetch(API_ENDPOINT.DETAIL(id));\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurant;\r\n  }\r\n}\r\n\r\nexport default RestoDbSource;\r\n","const CONFIG = {\r\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\r\n  BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/small/',\r\n  DEFAULT_LANGUAGE: 'en-us',\r\n  CACHE_NAME: new Date().toISOString(),\r\n  DATABASE_NAME: 'restaurant-catalogue-database',\r\n  DATABASE_VERSION: 1,\r\n  OBJECT_STORE_NAME: 'restaurants',\r\n\r\n};\r\n\r\nexport default CONFIG;\r\n","/* eslint-disable no-unused-vars */\r\nimport 'regenerator-runtime';\r\nimport '../styles/style.css';\r\nimport '../styles/responsive.css';\r\nimport App from './views/app';\r\nimport swRegister from './utils/sw-register';\r\nimport 'lazysizes';\r\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\r\n\r\nconst app = new App({\r\n  button: document.querySelector('#hamburgerButton'),\r\n  drawer: document.querySelector('#navigationDrawer'),\r\n  content: document.querySelector('#mainContent'),\r\n});\r\n\r\nwindow.addEventListener('hashchange', () => {\r\n  app.renderPage();\r\n});\r\n\r\nwindow.addEventListener('load', () => {\r\n  app.renderPage();\r\n  swRegister();\r\n});\r\n"],"names":["i","DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestaurant","id","get","getAllRestaurants","getAll","putRestaurant","restaurant","hasOwnProperty","put","deleteRestaurant","searchRestaurants","query","LIST","DETAIL","fetch","API_ENDPOINT","response","json","responseJson","restaurants","BASE_URL","BASE_IMAGE_URL","DEFAULT_LANGUAGE","CACHE_NAME","Date","toISOString","app","App","button","document","querySelector","drawer","content","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}